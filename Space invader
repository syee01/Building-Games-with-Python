import pygame
import random 
import math

#load music # drawline  #gameOver font 
# pygame.font.SysFont()
#pygame.draw.line

pygame.init()

WIDTH = 800
HEIGHT = 600

#CREATE THE SCREEN
screen = pygame.display.set_mode((WIDTH, HEIGHT))

pygame.display.set_caption("Space Invader")
icon = pygame.image.load('ufo.png')
pygame.display.set_icon(icon)

playerIMG = pygame.image.load('spaceship.png')
#x coordinate 
playerX = 370
#y coordinate 
playerY = 520
#how many pixel or how far will the spaceship move 
playerX_change = 0

#LIST
enemyIMG = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
    enemyIMG.append(pygame.image.load('alien.png'))
    enemyX.append(random.randint(0,736))
    enemyY.append(random.randint(50,150))
    enemyX_change.append (10)
    enemyY_change.append(15)

#load bullet image 
bulletIMG = pygame.image.load('bullet.png')
bulletX = 370
bulletY = 480
#do no need bulletX_change cuz bullet just move in y direction
bulletY_change = 2
bullet_state = 'ready'

#score
score = 0
#load score font onto our screen
score_font = pygame.font.SysFont('monospace', 32, bold=True, italic=False)
#x coordinate
textX = 10
#y coordinate
textY = 10

#pygame module for controlling streamed audio
#pygame.mixer.music
pygame.mixer.music.load('background.mp3') 
pygame.mixer.music.play(-1) 

#game_over_font = pygame.font.SysFont("monospace", 64, bold =True, italic=False)

def player(x,y):
    #drawing an image to our screen 
    screen.blit(playerIMG,(x,y))

def enemy(x,y,i):
    screen.blit(enemyIMG[i],(x,y))

def fire_bullet(x,y):
#set is as global to access the value inside the function
    global bullet_state
#when the spacebar is pressed bullet in the state of fire
    bullet_state = "fire"
#let the screen appear on the screen
    screen.blit(bulletIMG,(x+16,y+10))

def collision(enemyX,enemyY,bulletX,bulletY):
    distance = math.sqrt((math.pow(enemyX-bulletX,2))+ math.pow(enemyY- bulletY,2))
    if distance < 27:
        return True

def show_score(x,y):
    SCORE = score_font.render("Score: " + str(score),True ,(255,255,255))
    screen.blit(SCORE,(x,y))

def game_over():
    over= game_over_font.render("GAME OVER",True,(255,255,255))
    end = pygame.mixer.Sound('gameover.mp3')
    end.play()
    screen.blit(over,(200,250))

run = True
while run:
    screen.fill((0,0,0))
    #draw line
    pygame.draw.line(screen,(255,255,255),(0,490),(800,490),1)
   
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_change = -1.5
            if event.key == pygame.K_RIGHT:
                playerX_change = 1.5

            if event.key == pygame.K_SPACE:
                #we can only fire bullet when the state of bullet is ready
                if bullet_state =="ready":
                #pygame module for loading and playing sounds
                    bullet_Sound = pygame.mixer.Sound('laser.wav')
                    bullet_Sound.play()
                    #bullet start from the spaceship and the bullet is not following our spaceship
                    bulletX = playerX
                    fire_bullet(bulletX,bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0

    playerX += playerX_change
    if playerX <=0:
        playerX =0
    elif playerX >= 800 - 64:
        playerX = 736
    
    for i in range(num_of_enemies):
        if enemyY[i] > 455:
            for j in range(num_of_enemies):
                enemyY[j] = 2000
            pygame.mixer.music.stop()
            game_over()
            break 

        enemyX[i] += enemyX_change[i]
        if enemyX[i] <=0:
            enemyX_change[i] = 1.5
            enemyY[i] += enemyY_change[i]
        elif enemyX[i] >= 800 - 64:
            enemyX_change[i] = -1.5
            enemyY[i] += enemyY_change[i]

        Collision = collision(enemyX[i],enemyY[i],bulletX,bulletY)
        if Collision:
            explosion_Sound = pygame.mixer.Sound('explosion.wav') 
            explosion_Sound.play() 
            bulletY = 480
            bullet_state = "ready"
            score +=1
            print(score)
            enemyX[i] = random.randint(0,736)
            enemyY[i] = random.randint(50,150)
        
        #Calling the enemy
        enemy(enemyX[i],enemyY[i],i)
    
    #check the state of the bullet 
    if bullet_state == "fire":
        fire_bullet(bulletX,bulletY)
        bulletY -= bulletY_change

    #multiple bullet 
    if bulletY <=0:
        bulletY = 480
        bullet_state = "ready"

    #calling the player function to load the spaceship image 
    player(playerX,playerY) 

    #calling the show_score function to load the score 
    show_score(textX,textY)
   
    pygame.display.update()

pygame.quit()
